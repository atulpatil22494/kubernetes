pipeline {
    agent any
    environment {
        DOCKER_REGISTRY = 'atulpatil22'
        DOCKER_CRED = credentials('docker-cred')
        HELM_CHART_PATH = '/var/lib/jenkins/workspace/test1/helm/inshine'
        KUBECONFIG = credentials('config')
    }
    stages {

        stage('Clone Repository') {
            steps {
                script {
                    git branch: 'main', credentialsId: 'your-git-credentials-id', url: 'https://github.com/atulpatil22494/kubernetes.git'
                }
            }
        }
        stage('Build and Package Database') {
            steps {
                dir('Inshine/Database-MySQL') {
                    script {
                        def dockerImageTag = "${DOCKER_REGISTRY}/inshine_database_mysql:${BUILD_NUMBER}"
                        sh "docker build -t ${dockerImageTag} ."

                        // Replace the backend.database.image value in values.yaml
                        sh "sed -i 's|backend.database.image:.*|backend.database.image: ${dockerImageTag}|' ${HELM_CHART_PATH}/values.yaml"
                    }
                }
            }
        }
        stage('Build and Package Spring Boot') {
            steps {
                dir('Inshine/Backend - Inshine') {
                    script {
                        def dockerImageTag = "${DOCKER_REGISTRY}/inshine_backend_springboot:${BUILD_NUMBER}"
                        sh "docker build -t ${dockerImageTag} ."

                        // Replace the backend.image value in values.yaml
                        sh "sed -i 's|backend.image:.*|backend.image: ${dockerImageTag}|' ${HELM_CHART_PATH}/values.yaml"
                    }
                }
            }
        }
        stage('Build React-app') {
            steps {
                dir('Inshine/Frontend - Inshine/reactt') {
                    script {
                        def dockerImageTag = "${DOCKER_REGISTRY}/inshine_frontend_react:${BUILD_NUMBER}"
                        sh "docker build -t ${dockerImageTag} ."

                        // Replace the frontend.image value in values.yaml
                        sh "sed -i 's|frontend.image:.*|frontend.image: ${dockerImageTag}|' ${HELM_CHART_PATH}/values.yaml"
                    }
                }
            }
        }

        stage('Deploy to Kubernetes') {
            steps {
                script {
                    sh "echo '\${KUBECONFIG}' > /tmp/config"
                    sh "kubectl --kubeconfig=/tmp/config apply -f your-deployment.yaml"
                }
            }
        }

        stage('rbac deployment') {
            steps {
                dir('helm/inshine') {
                    script {
                            sh "kubectl apply -f rbac.yaml"
                    }
                }
            }
        }
        
        stage('Deployment app through helm on Kubernetes') {
            steps {
                sh "helm upgrade --install inshine ${HELM_CHART_PATH}"
            }
        }
    }
}
