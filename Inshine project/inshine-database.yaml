apiVersion: v1
kind: Service
metadata:
  name: inshine-database
spec:
    ports:
     - port: 3306
       targetPort: 3306
    selector:
        name: inshine-database
        app: inshine-database

---

# Define a 'Persistent Volume Claim'(PVC) for MySQL Storage, dynamically provisioned by cluster
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pv-claim # name of PVC essential for identifying the storage data
  labels:
    app: pvc-inshine-database
spec:
  accessModes:
    - ReadWriteOnce   #This specifies the mode of the claim that we are trying to create.
  resources:
    requests:
      storage: 1Gi    #This will tell kubernetes about the amount of space we are trying to claim.
      
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: deployment-inshine-database
spec:
  replicas: 1
  selector:
    matchLabels:      
        name: inshine-database
        app: inshine-database    
  template:
    metadata:
      name: inshine-database-mysql
      labels:
        name: inshine-database
        app: inshine-database
    spec:
      containers:
        - name: inshine-database
          image: atulpatil22/inshine-database

          env:
          - name: DB_NAME
            valueFrom:
              configMapKeyRef:
                name: mysql-config-map
                key: DB_NAME

          - name: DB_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-secrets
                key: DB_PASSWORD

          ports:
            - containerPort: 3306
              name: mysql

          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-persistance-storage
      volumes:
        - name: mysql-persistance-storage
          persistentVolumeClaim:
            claimName: mysql-pv-claim